// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: multi_eta_struct.proto

#ifndef PROTOBUF_multi_5feta_5fstruct_2eproto__INCLUDED
#define PROTOBUF_multi_5feta_5fstruct_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MultiEtaInfo {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_multi_5feta_5fstruct_2eproto();
void protobuf_InitDefaults_multi_5feta_5fstruct_2eproto();
void protobuf_AssignDesc_multi_5feta_5fstruct_2eproto();
void protobuf_ShutdownFile_multi_5feta_5fstruct_2eproto();

class Duration;
class LinkInfo;
class Point;
class Request;
class Response;
class ResponseData;
class RouteLocation;
class RpDuration;
class TrafficInfo;

// ===================================================================

class Point : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MultiEtaInfo.Point) */ {
 public:
  Point();
  virtual ~Point();

  Point(const Point& from);

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Point& default_instance();

  static const Point* internal_default_instance();

  void Swap(Point* other);

  // implements Message ----------------------------------------------

  inline Point* New() const { return New(NULL); }

  Point* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Point* other);
  void UnsafeMergeFrom(const Point& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // optional double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // @@protoc_insertion_point(class_scope:MultiEtaInfo.Point)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_multi_5feta_5fstruct_2eproto_impl();
  friend void  protobuf_AddDesc_multi_5feta_5fstruct_2eproto_impl();
  friend void protobuf_AssignDesc_multi_5feta_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_multi_5feta_5fstruct_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Point> Point_default_instance_;

// -------------------------------------------------------------------

class TrafficInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MultiEtaInfo.TrafficInfo) */ {
 public:
  TrafficInfo();
  virtual ~TrafficInfo();

  TrafficInfo(const TrafficInfo& from);

  inline TrafficInfo& operator=(const TrafficInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrafficInfo& default_instance();

  static const TrafficInfo* internal_default_instance();

  void Swap(TrafficInfo* other);

  // implements Message ----------------------------------------------

  inline TrafficInfo* New() const { return New(NULL); }

  TrafficInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrafficInfo& from);
  void MergeFrom(const TrafficInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrafficInfo* other);
  void UnsafeMergeFrom(const TrafficInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 speed = 2;
  void clear_speed();
  static const int kSpeedFieldNumber = 2;
  ::google::protobuf::int32 speed() const;
  void set_speed(::google::protobuf::int32 value);

  // optional int32 status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MultiEtaInfo.TrafficInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_multi_5feta_5fstruct_2eproto_impl();
  friend void  protobuf_AddDesc_multi_5feta_5fstruct_2eproto_impl();
  friend void protobuf_AssignDesc_multi_5feta_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_multi_5feta_5fstruct_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TrafficInfo> TrafficInfo_default_instance_;

// -------------------------------------------------------------------

class RouteLocation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MultiEtaInfo.RouteLocation) */ {
 public:
  RouteLocation();
  virtual ~RouteLocation();

  RouteLocation(const RouteLocation& from);

  inline RouteLocation& operator=(const RouteLocation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RouteLocation& default_instance();

  static const RouteLocation* internal_default_instance();

  void Swap(RouteLocation* other);

  // implements Message ----------------------------------------------

  inline RouteLocation* New() const { return New(NULL); }

  RouteLocation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RouteLocation& from);
  void MergeFrom(const RouteLocation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RouteLocation* other);
  void UnsafeMergeFrom(const RouteLocation& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 link_id = 1;
  void clear_link_id();
  static const int kLinkIdFieldNumber = 1;
  ::google::protobuf::int32 link_id() const;
  void set_link_id(::google::protobuf::int32 value);

  // optional .MultiEtaInfo.Point on_link_point = 2;
  bool has_on_link_point() const;
  void clear_on_link_point();
  static const int kOnLinkPointFieldNumber = 2;
  const ::MultiEtaInfo::Point& on_link_point() const;
  ::MultiEtaInfo::Point* mutable_on_link_point();
  ::MultiEtaInfo::Point* release_on_link_point();
  void set_allocated_on_link_point(::MultiEtaInfo::Point* on_link_point);

  // @@protoc_insertion_point(class_scope:MultiEtaInfo.RouteLocation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::MultiEtaInfo::Point* on_link_point_;
  ::google::protobuf::int32 link_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_multi_5feta_5fstruct_2eproto_impl();
  friend void  protobuf_AddDesc_multi_5feta_5fstruct_2eproto_impl();
  friend void protobuf_AssignDesc_multi_5feta_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_multi_5feta_5fstruct_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RouteLocation> RouteLocation_default_instance_;

// -------------------------------------------------------------------

class LinkInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MultiEtaInfo.LinkInfo) */ {
 public:
  LinkInfo();
  virtual ~LinkInfo();

  LinkInfo(const LinkInfo& from);

  inline LinkInfo& operator=(const LinkInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LinkInfo& default_instance();

  static const LinkInfo* internal_default_instance();

  void Swap(LinkInfo* other);

  // implements Message ----------------------------------------------

  inline LinkInfo* New() const { return New(NULL); }

  LinkInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LinkInfo& from);
  void MergeFrom(const LinkInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LinkInfo* other);
  void UnsafeMergeFrom(const LinkInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 link_id = 1;
  void clear_link_id();
  static const int kLinkIdFieldNumber = 1;
  ::google::protobuf::int32 link_id() const;
  void set_link_id(::google::protobuf::int32 value);

  // optional int32 reversed = 2;
  void clear_reversed();
  static const int kReversedFieldNumber = 2;
  ::google::protobuf::int32 reversed() const;
  void set_reversed(::google::protobuf::int32 value);

  // repeated .MultiEtaInfo.TrafficInfo traffics = 3;
  int traffics_size() const;
  void clear_traffics();
  static const int kTrafficsFieldNumber = 3;
  const ::MultiEtaInfo::TrafficInfo& traffics(int index) const;
  ::MultiEtaInfo::TrafficInfo* mutable_traffics(int index);
  ::MultiEtaInfo::TrafficInfo* add_traffics();
  ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::TrafficInfo >*
      mutable_traffics();
  const ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::TrafficInfo >&
      traffics() const;

  // @@protoc_insertion_point(class_scope:MultiEtaInfo.LinkInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::TrafficInfo > traffics_;
  ::google::protobuf::int32 link_id_;
  ::google::protobuf::int32 reversed_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_multi_5feta_5fstruct_2eproto_impl();
  friend void  protobuf_AddDesc_multi_5feta_5fstruct_2eproto_impl();
  friend void protobuf_AssignDesc_multi_5feta_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_multi_5feta_5fstruct_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LinkInfo> LinkInfo_default_instance_;

// -------------------------------------------------------------------

class Duration : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MultiEtaInfo.Duration) */ {
 public:
  Duration();
  virtual ~Duration();

  Duration(const Duration& from);

  inline Duration& operator=(const Duration& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duration& default_instance();

  static const Duration* internal_default_instance();

  void Swap(Duration* other);

  // implements Message ----------------------------------------------

  inline Duration* New() const { return New(NULL); }

  Duration* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duration& from);
  void MergeFrom(const Duration& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Duration* other);
  void UnsafeMergeFrom(const Duration& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 eta = 2;
  void clear_eta();
  static const int kEtaFieldNumber = 2;
  ::google::protobuf::int32 eta() const;
  void set_eta(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MultiEtaInfo.Duration)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 eta_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_multi_5feta_5fstruct_2eproto_impl();
  friend void  protobuf_AddDesc_multi_5feta_5fstruct_2eproto_impl();
  friend void protobuf_AssignDesc_multi_5feta_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_multi_5feta_5fstruct_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Duration> Duration_default_instance_;

// -------------------------------------------------------------------

class RpDuration : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MultiEtaInfo.RpDuration) */ {
 public:
  RpDuration();
  virtual ~RpDuration();

  RpDuration(const RpDuration& from);

  inline RpDuration& operator=(const RpDuration& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RpDuration& default_instance();

  static const RpDuration* internal_default_instance();

  void Swap(RpDuration* other);

  // implements Message ----------------------------------------------

  inline RpDuration* New() const { return New(NULL); }

  RpDuration* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RpDuration& from);
  void MergeFrom(const RpDuration& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RpDuration* other);
  void UnsafeMergeFrom(const RpDuration& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MultiEtaInfo.Duration duration = 1;
  int duration_size() const;
  void clear_duration();
  static const int kDurationFieldNumber = 1;
  const ::MultiEtaInfo::Duration& duration(int index) const;
  ::MultiEtaInfo::Duration* mutable_duration(int index);
  ::MultiEtaInfo::Duration* add_duration();
  ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::Duration >*
      mutable_duration();
  const ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::Duration >&
      duration() const;

  // @@protoc_insertion_point(class_scope:MultiEtaInfo.RpDuration)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::Duration > duration_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_multi_5feta_5fstruct_2eproto_impl();
  friend void  protobuf_AddDesc_multi_5feta_5fstruct_2eproto_impl();
  friend void protobuf_AssignDesc_multi_5feta_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_multi_5feta_5fstruct_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RpDuration> RpDuration_default_instance_;

// -------------------------------------------------------------------

class ResponseData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MultiEtaInfo.ResponseData) */ {
 public:
  ResponseData();
  virtual ~ResponseData();

  ResponseData(const ResponseData& from);

  inline ResponseData& operator=(const ResponseData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseData& default_instance();

  static const ResponseData* internal_default_instance();

  void Swap(ResponseData* other);

  // implements Message ----------------------------------------------

  inline ResponseData* New() const { return New(NULL); }

  ResponseData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseData& from);
  void MergeFrom(const ResponseData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseData* other);
  void UnsafeMergeFrom(const ResponseData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string map_db_version = 1;
  void clear_map_db_version();
  static const int kMapDbVersionFieldNumber = 1;
  const ::std::string& map_db_version() const;
  void set_map_db_version(const ::std::string& value);
  void set_map_db_version(const char* value);
  void set_map_db_version(const char* value, size_t size);
  ::std::string* mutable_map_db_version();
  ::std::string* release_map_db_version();
  void set_allocated_map_db_version(::std::string* map_db_version);

  // repeated .MultiEtaInfo.RpDuration rp_duration = 2;
  int rp_duration_size() const;
  void clear_rp_duration();
  static const int kRpDurationFieldNumber = 2;
  const ::MultiEtaInfo::RpDuration& rp_duration(int index) const;
  ::MultiEtaInfo::RpDuration* mutable_rp_duration(int index);
  ::MultiEtaInfo::RpDuration* add_rp_duration();
  ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::RpDuration >*
      mutable_rp_duration();
  const ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::RpDuration >&
      rp_duration() const;

  // @@protoc_insertion_point(class_scope:MultiEtaInfo.ResponseData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::RpDuration > rp_duration_;
  ::google::protobuf::internal::ArenaStringPtr map_db_version_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_multi_5feta_5fstruct_2eproto_impl();
  friend void  protobuf_AddDesc_multi_5feta_5fstruct_2eproto_impl();
  friend void protobuf_AssignDesc_multi_5feta_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_multi_5feta_5fstruct_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResponseData> ResponseData_default_instance_;

// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MultiEtaInfo.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static const Request* internal_default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  void UnsafeMergeFrom(const Request& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MultiEtaInfo.RouteLocation origin = 1;
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 1;
  const ::MultiEtaInfo::RouteLocation& origin() const;
  ::MultiEtaInfo::RouteLocation* mutable_origin();
  ::MultiEtaInfo::RouteLocation* release_origin();
  void set_allocated_origin(::MultiEtaInfo::RouteLocation* origin);

  // optional .MultiEtaInfo.RouteLocation destination = 2;
  bool has_destination() const;
  void clear_destination();
  static const int kDestinationFieldNumber = 2;
  const ::MultiEtaInfo::RouteLocation& destination() const;
  ::MultiEtaInfo::RouteLocation* mutable_destination();
  ::MultiEtaInfo::RouteLocation* release_destination();
  void set_allocated_destination(::MultiEtaInfo::RouteLocation* destination);

  // repeated .MultiEtaInfo.RouteLocation rpPoint = 3;
  int rppoint_size() const;
  void clear_rppoint();
  static const int kRpPointFieldNumber = 3;
  const ::MultiEtaInfo::RouteLocation& rppoint(int index) const;
  ::MultiEtaInfo::RouteLocation* mutable_rppoint(int index);
  ::MultiEtaInfo::RouteLocation* add_rppoint();
  ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::RouteLocation >*
      mutable_rppoint();
  const ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::RouteLocation >&
      rppoint() const;

  // repeated int32 linkIdx = 4;
  int linkidx_size() const;
  void clear_linkidx();
  static const int kLinkIdxFieldNumber = 4;
  ::google::protobuf::int32 linkidx(int index) const;
  void set_linkidx(int index, ::google::protobuf::int32 value);
  void add_linkidx(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      linkidx() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_linkidx();

  // repeated .MultiEtaInfo.LinkInfo rpLinks = 5;
  int rplinks_size() const;
  void clear_rplinks();
  static const int kRpLinksFieldNumber = 5;
  const ::MultiEtaInfo::LinkInfo& rplinks(int index) const;
  ::MultiEtaInfo::LinkInfo* mutable_rplinks(int index);
  ::MultiEtaInfo::LinkInfo* add_rplinks();
  ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::LinkInfo >*
      mutable_rplinks();
  const ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::LinkInfo >&
      rplinks() const;

  // optional string map_db_version = 6;
  void clear_map_db_version();
  static const int kMapDbVersionFieldNumber = 6;
  const ::std::string& map_db_version() const;
  void set_map_db_version(const ::std::string& value);
  void set_map_db_version(const char* value);
  void set_map_db_version(const char* value, size_t size);
  ::std::string* mutable_map_db_version();
  ::std::string* release_map_db_version();
  void set_allocated_map_db_version(::std::string* map_db_version);

  // @@protoc_insertion_point(class_scope:MultiEtaInfo.Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::RouteLocation > rppoint_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > linkidx_;
  mutable int _linkidx_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::LinkInfo > rplinks_;
  ::google::protobuf::internal::ArenaStringPtr map_db_version_;
  ::MultiEtaInfo::RouteLocation* origin_;
  ::MultiEtaInfo::RouteLocation* destination_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_multi_5feta_5fstruct_2eproto_impl();
  friend void  protobuf_AddDesc_multi_5feta_5fstruct_2eproto_impl();
  friend void protobuf_AssignDesc_multi_5feta_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_multi_5feta_5fstruct_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Request> Request_default_instance_;

// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MultiEtaInfo.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static const Response* internal_default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response* other);
  void UnsafeMergeFrom(const Response& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional string msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional .MultiEtaInfo.ResponseData data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::MultiEtaInfo::ResponseData& data() const;
  ::MultiEtaInfo::ResponseData* mutable_data();
  ::MultiEtaInfo::ResponseData* release_data();
  void set_allocated_data(::MultiEtaInfo::ResponseData* data);

  // @@protoc_insertion_point(class_scope:MultiEtaInfo.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::MultiEtaInfo::ResponseData* data_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_multi_5feta_5fstruct_2eproto_impl();
  friend void  protobuf_AddDesc_multi_5feta_5fstruct_2eproto_impl();
  friend void protobuf_AssignDesc_multi_5feta_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_multi_5feta_5fstruct_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Response> Response_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Point

// optional double x = 1;
inline void Point::clear_x() {
  x_ = 0;
}
inline double Point::x() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.Point.x)
  return x_;
}
inline void Point::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:MultiEtaInfo.Point.x)
}

// optional double y = 2;
inline void Point::clear_y() {
  y_ = 0;
}
inline double Point::y() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.Point.y)
  return y_;
}
inline void Point::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:MultiEtaInfo.Point.y)
}

inline const Point* Point::internal_default_instance() {
  return &Point_default_instance_.get();
}
// -------------------------------------------------------------------

// TrafficInfo

// optional int32 type = 1;
inline void TrafficInfo::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 TrafficInfo::type() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.TrafficInfo.type)
  return type_;
}
inline void TrafficInfo::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:MultiEtaInfo.TrafficInfo.type)
}

// optional int32 speed = 2;
inline void TrafficInfo::clear_speed() {
  speed_ = 0;
}
inline ::google::protobuf::int32 TrafficInfo::speed() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.TrafficInfo.speed)
  return speed_;
}
inline void TrafficInfo::set_speed(::google::protobuf::int32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:MultiEtaInfo.TrafficInfo.speed)
}

// optional int32 status = 3;
inline void TrafficInfo::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 TrafficInfo::status() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.TrafficInfo.status)
  return status_;
}
inline void TrafficInfo::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:MultiEtaInfo.TrafficInfo.status)
}

inline const TrafficInfo* TrafficInfo::internal_default_instance() {
  return &TrafficInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// RouteLocation

// optional int32 link_id = 1;
inline void RouteLocation::clear_link_id() {
  link_id_ = 0;
}
inline ::google::protobuf::int32 RouteLocation::link_id() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.RouteLocation.link_id)
  return link_id_;
}
inline void RouteLocation::set_link_id(::google::protobuf::int32 value) {
  
  link_id_ = value;
  // @@protoc_insertion_point(field_set:MultiEtaInfo.RouteLocation.link_id)
}

// optional .MultiEtaInfo.Point on_link_point = 2;
inline bool RouteLocation::has_on_link_point() const {
  return this != internal_default_instance() && on_link_point_ != NULL;
}
inline void RouteLocation::clear_on_link_point() {
  if (GetArenaNoVirtual() == NULL && on_link_point_ != NULL) delete on_link_point_;
  on_link_point_ = NULL;
}
inline const ::MultiEtaInfo::Point& RouteLocation::on_link_point() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.RouteLocation.on_link_point)
  return on_link_point_ != NULL ? *on_link_point_
                         : *::MultiEtaInfo::Point::internal_default_instance();
}
inline ::MultiEtaInfo::Point* RouteLocation::mutable_on_link_point() {
  
  if (on_link_point_ == NULL) {
    on_link_point_ = new ::MultiEtaInfo::Point;
  }
  // @@protoc_insertion_point(field_mutable:MultiEtaInfo.RouteLocation.on_link_point)
  return on_link_point_;
}
inline ::MultiEtaInfo::Point* RouteLocation::release_on_link_point() {
  // @@protoc_insertion_point(field_release:MultiEtaInfo.RouteLocation.on_link_point)
  
  ::MultiEtaInfo::Point* temp = on_link_point_;
  on_link_point_ = NULL;
  return temp;
}
inline void RouteLocation::set_allocated_on_link_point(::MultiEtaInfo::Point* on_link_point) {
  delete on_link_point_;
  on_link_point_ = on_link_point;
  if (on_link_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MultiEtaInfo.RouteLocation.on_link_point)
}

inline const RouteLocation* RouteLocation::internal_default_instance() {
  return &RouteLocation_default_instance_.get();
}
// -------------------------------------------------------------------

// LinkInfo

// optional int32 link_id = 1;
inline void LinkInfo::clear_link_id() {
  link_id_ = 0;
}
inline ::google::protobuf::int32 LinkInfo::link_id() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.LinkInfo.link_id)
  return link_id_;
}
inline void LinkInfo::set_link_id(::google::protobuf::int32 value) {
  
  link_id_ = value;
  // @@protoc_insertion_point(field_set:MultiEtaInfo.LinkInfo.link_id)
}

// optional int32 reversed = 2;
inline void LinkInfo::clear_reversed() {
  reversed_ = 0;
}
inline ::google::protobuf::int32 LinkInfo::reversed() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.LinkInfo.reversed)
  return reversed_;
}
inline void LinkInfo::set_reversed(::google::protobuf::int32 value) {
  
  reversed_ = value;
  // @@protoc_insertion_point(field_set:MultiEtaInfo.LinkInfo.reversed)
}

// repeated .MultiEtaInfo.TrafficInfo traffics = 3;
inline int LinkInfo::traffics_size() const {
  return traffics_.size();
}
inline void LinkInfo::clear_traffics() {
  traffics_.Clear();
}
inline const ::MultiEtaInfo::TrafficInfo& LinkInfo::traffics(int index) const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.LinkInfo.traffics)
  return traffics_.Get(index);
}
inline ::MultiEtaInfo::TrafficInfo* LinkInfo::mutable_traffics(int index) {
  // @@protoc_insertion_point(field_mutable:MultiEtaInfo.LinkInfo.traffics)
  return traffics_.Mutable(index);
}
inline ::MultiEtaInfo::TrafficInfo* LinkInfo::add_traffics() {
  // @@protoc_insertion_point(field_add:MultiEtaInfo.LinkInfo.traffics)
  return traffics_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::TrafficInfo >*
LinkInfo::mutable_traffics() {
  // @@protoc_insertion_point(field_mutable_list:MultiEtaInfo.LinkInfo.traffics)
  return &traffics_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::TrafficInfo >&
LinkInfo::traffics() const {
  // @@protoc_insertion_point(field_list:MultiEtaInfo.LinkInfo.traffics)
  return traffics_;
}

inline const LinkInfo* LinkInfo::internal_default_instance() {
  return &LinkInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// Duration

// optional int32 type = 1;
inline void Duration::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Duration::type() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.Duration.type)
  return type_;
}
inline void Duration::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:MultiEtaInfo.Duration.type)
}

// optional int32 eta = 2;
inline void Duration::clear_eta() {
  eta_ = 0;
}
inline ::google::protobuf::int32 Duration::eta() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.Duration.eta)
  return eta_;
}
inline void Duration::set_eta(::google::protobuf::int32 value) {
  
  eta_ = value;
  // @@protoc_insertion_point(field_set:MultiEtaInfo.Duration.eta)
}

inline const Duration* Duration::internal_default_instance() {
  return &Duration_default_instance_.get();
}
// -------------------------------------------------------------------

// RpDuration

// repeated .MultiEtaInfo.Duration duration = 1;
inline int RpDuration::duration_size() const {
  return duration_.size();
}
inline void RpDuration::clear_duration() {
  duration_.Clear();
}
inline const ::MultiEtaInfo::Duration& RpDuration::duration(int index) const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.RpDuration.duration)
  return duration_.Get(index);
}
inline ::MultiEtaInfo::Duration* RpDuration::mutable_duration(int index) {
  // @@protoc_insertion_point(field_mutable:MultiEtaInfo.RpDuration.duration)
  return duration_.Mutable(index);
}
inline ::MultiEtaInfo::Duration* RpDuration::add_duration() {
  // @@protoc_insertion_point(field_add:MultiEtaInfo.RpDuration.duration)
  return duration_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::Duration >*
RpDuration::mutable_duration() {
  // @@protoc_insertion_point(field_mutable_list:MultiEtaInfo.RpDuration.duration)
  return &duration_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::Duration >&
RpDuration::duration() const {
  // @@protoc_insertion_point(field_list:MultiEtaInfo.RpDuration.duration)
  return duration_;
}

inline const RpDuration* RpDuration::internal_default_instance() {
  return &RpDuration_default_instance_.get();
}
// -------------------------------------------------------------------

// ResponseData

// optional string map_db_version = 1;
inline void ResponseData::clear_map_db_version() {
  map_db_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseData::map_db_version() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.ResponseData.map_db_version)
  return map_db_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseData::set_map_db_version(const ::std::string& value) {
  
  map_db_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MultiEtaInfo.ResponseData.map_db_version)
}
inline void ResponseData::set_map_db_version(const char* value) {
  
  map_db_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MultiEtaInfo.ResponseData.map_db_version)
}
inline void ResponseData::set_map_db_version(const char* value, size_t size) {
  
  map_db_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MultiEtaInfo.ResponseData.map_db_version)
}
inline ::std::string* ResponseData::mutable_map_db_version() {
  
  // @@protoc_insertion_point(field_mutable:MultiEtaInfo.ResponseData.map_db_version)
  return map_db_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseData::release_map_db_version() {
  // @@protoc_insertion_point(field_release:MultiEtaInfo.ResponseData.map_db_version)
  
  return map_db_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseData::set_allocated_map_db_version(::std::string* map_db_version) {
  if (map_db_version != NULL) {
    
  } else {
    
  }
  map_db_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_db_version);
  // @@protoc_insertion_point(field_set_allocated:MultiEtaInfo.ResponseData.map_db_version)
}

// repeated .MultiEtaInfo.RpDuration rp_duration = 2;
inline int ResponseData::rp_duration_size() const {
  return rp_duration_.size();
}
inline void ResponseData::clear_rp_duration() {
  rp_duration_.Clear();
}
inline const ::MultiEtaInfo::RpDuration& ResponseData::rp_duration(int index) const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.ResponseData.rp_duration)
  return rp_duration_.Get(index);
}
inline ::MultiEtaInfo::RpDuration* ResponseData::mutable_rp_duration(int index) {
  // @@protoc_insertion_point(field_mutable:MultiEtaInfo.ResponseData.rp_duration)
  return rp_duration_.Mutable(index);
}
inline ::MultiEtaInfo::RpDuration* ResponseData::add_rp_duration() {
  // @@protoc_insertion_point(field_add:MultiEtaInfo.ResponseData.rp_duration)
  return rp_duration_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::RpDuration >*
ResponseData::mutable_rp_duration() {
  // @@protoc_insertion_point(field_mutable_list:MultiEtaInfo.ResponseData.rp_duration)
  return &rp_duration_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::RpDuration >&
ResponseData::rp_duration() const {
  // @@protoc_insertion_point(field_list:MultiEtaInfo.ResponseData.rp_duration)
  return rp_duration_;
}

inline const ResponseData* ResponseData::internal_default_instance() {
  return &ResponseData_default_instance_.get();
}
// -------------------------------------------------------------------

// Request

// optional .MultiEtaInfo.RouteLocation origin = 1;
inline bool Request::has_origin() const {
  return this != internal_default_instance() && origin_ != NULL;
}
inline void Request::clear_origin() {
  if (GetArenaNoVirtual() == NULL && origin_ != NULL) delete origin_;
  origin_ = NULL;
}
inline const ::MultiEtaInfo::RouteLocation& Request::origin() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.Request.origin)
  return origin_ != NULL ? *origin_
                         : *::MultiEtaInfo::RouteLocation::internal_default_instance();
}
inline ::MultiEtaInfo::RouteLocation* Request::mutable_origin() {
  
  if (origin_ == NULL) {
    origin_ = new ::MultiEtaInfo::RouteLocation;
  }
  // @@protoc_insertion_point(field_mutable:MultiEtaInfo.Request.origin)
  return origin_;
}
inline ::MultiEtaInfo::RouteLocation* Request::release_origin() {
  // @@protoc_insertion_point(field_release:MultiEtaInfo.Request.origin)
  
  ::MultiEtaInfo::RouteLocation* temp = origin_;
  origin_ = NULL;
  return temp;
}
inline void Request::set_allocated_origin(::MultiEtaInfo::RouteLocation* origin) {
  delete origin_;
  origin_ = origin;
  if (origin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MultiEtaInfo.Request.origin)
}

// optional .MultiEtaInfo.RouteLocation destination = 2;
inline bool Request::has_destination() const {
  return this != internal_default_instance() && destination_ != NULL;
}
inline void Request::clear_destination() {
  if (GetArenaNoVirtual() == NULL && destination_ != NULL) delete destination_;
  destination_ = NULL;
}
inline const ::MultiEtaInfo::RouteLocation& Request::destination() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.Request.destination)
  return destination_ != NULL ? *destination_
                         : *::MultiEtaInfo::RouteLocation::internal_default_instance();
}
inline ::MultiEtaInfo::RouteLocation* Request::mutable_destination() {
  
  if (destination_ == NULL) {
    destination_ = new ::MultiEtaInfo::RouteLocation;
  }
  // @@protoc_insertion_point(field_mutable:MultiEtaInfo.Request.destination)
  return destination_;
}
inline ::MultiEtaInfo::RouteLocation* Request::release_destination() {
  // @@protoc_insertion_point(field_release:MultiEtaInfo.Request.destination)
  
  ::MultiEtaInfo::RouteLocation* temp = destination_;
  destination_ = NULL;
  return temp;
}
inline void Request::set_allocated_destination(::MultiEtaInfo::RouteLocation* destination) {
  delete destination_;
  destination_ = destination;
  if (destination) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MultiEtaInfo.Request.destination)
}

// repeated .MultiEtaInfo.RouteLocation rpPoint = 3;
inline int Request::rppoint_size() const {
  return rppoint_.size();
}
inline void Request::clear_rppoint() {
  rppoint_.Clear();
}
inline const ::MultiEtaInfo::RouteLocation& Request::rppoint(int index) const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.Request.rpPoint)
  return rppoint_.Get(index);
}
inline ::MultiEtaInfo::RouteLocation* Request::mutable_rppoint(int index) {
  // @@protoc_insertion_point(field_mutable:MultiEtaInfo.Request.rpPoint)
  return rppoint_.Mutable(index);
}
inline ::MultiEtaInfo::RouteLocation* Request::add_rppoint() {
  // @@protoc_insertion_point(field_add:MultiEtaInfo.Request.rpPoint)
  return rppoint_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::RouteLocation >*
Request::mutable_rppoint() {
  // @@protoc_insertion_point(field_mutable_list:MultiEtaInfo.Request.rpPoint)
  return &rppoint_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::RouteLocation >&
Request::rppoint() const {
  // @@protoc_insertion_point(field_list:MultiEtaInfo.Request.rpPoint)
  return rppoint_;
}

// repeated int32 linkIdx = 4;
inline int Request::linkidx_size() const {
  return linkidx_.size();
}
inline void Request::clear_linkidx() {
  linkidx_.Clear();
}
inline ::google::protobuf::int32 Request::linkidx(int index) const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.Request.linkIdx)
  return linkidx_.Get(index);
}
inline void Request::set_linkidx(int index, ::google::protobuf::int32 value) {
  linkidx_.Set(index, value);
  // @@protoc_insertion_point(field_set:MultiEtaInfo.Request.linkIdx)
}
inline void Request::add_linkidx(::google::protobuf::int32 value) {
  linkidx_.Add(value);
  // @@protoc_insertion_point(field_add:MultiEtaInfo.Request.linkIdx)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Request::linkidx() const {
  // @@protoc_insertion_point(field_list:MultiEtaInfo.Request.linkIdx)
  return linkidx_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Request::mutable_linkidx() {
  // @@protoc_insertion_point(field_mutable_list:MultiEtaInfo.Request.linkIdx)
  return &linkidx_;
}

// repeated .MultiEtaInfo.LinkInfo rpLinks = 5;
inline int Request::rplinks_size() const {
  return rplinks_.size();
}
inline void Request::clear_rplinks() {
  rplinks_.Clear();
}
inline const ::MultiEtaInfo::LinkInfo& Request::rplinks(int index) const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.Request.rpLinks)
  return rplinks_.Get(index);
}
inline ::MultiEtaInfo::LinkInfo* Request::mutable_rplinks(int index) {
  // @@protoc_insertion_point(field_mutable:MultiEtaInfo.Request.rpLinks)
  return rplinks_.Mutable(index);
}
inline ::MultiEtaInfo::LinkInfo* Request::add_rplinks() {
  // @@protoc_insertion_point(field_add:MultiEtaInfo.Request.rpLinks)
  return rplinks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::LinkInfo >*
Request::mutable_rplinks() {
  // @@protoc_insertion_point(field_mutable_list:MultiEtaInfo.Request.rpLinks)
  return &rplinks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MultiEtaInfo::LinkInfo >&
Request::rplinks() const {
  // @@protoc_insertion_point(field_list:MultiEtaInfo.Request.rpLinks)
  return rplinks_;
}

// optional string map_db_version = 6;
inline void Request::clear_map_db_version() {
  map_db_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::map_db_version() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.Request.map_db_version)
  return map_db_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_map_db_version(const ::std::string& value) {
  
  map_db_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MultiEtaInfo.Request.map_db_version)
}
inline void Request::set_map_db_version(const char* value) {
  
  map_db_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MultiEtaInfo.Request.map_db_version)
}
inline void Request::set_map_db_version(const char* value, size_t size) {
  
  map_db_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MultiEtaInfo.Request.map_db_version)
}
inline ::std::string* Request::mutable_map_db_version() {
  
  // @@protoc_insertion_point(field_mutable:MultiEtaInfo.Request.map_db_version)
  return map_db_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_map_db_version() {
  // @@protoc_insertion_point(field_release:MultiEtaInfo.Request.map_db_version)
  
  return map_db_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_map_db_version(::std::string* map_db_version) {
  if (map_db_version != NULL) {
    
  } else {
    
  }
  map_db_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_db_version);
  // @@protoc_insertion_point(field_set_allocated:MultiEtaInfo.Request.map_db_version)
}

inline const Request* Request::internal_default_instance() {
  return &Request_default_instance_.get();
}
// -------------------------------------------------------------------

// Response

// optional int32 status = 1;
inline void Response::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 Response::status() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.Response.status)
  return status_;
}
inline void Response::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:MultiEtaInfo.Response.status)
}

// optional string msg = 2;
inline void Response::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Response::msg() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.Response.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MultiEtaInfo.Response.msg)
}
inline void Response::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MultiEtaInfo.Response.msg)
}
inline void Response::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MultiEtaInfo.Response.msg)
}
inline ::std::string* Response::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:MultiEtaInfo.Response.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_msg() {
  // @@protoc_insertion_point(field_release:MultiEtaInfo.Response.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:MultiEtaInfo.Response.msg)
}

// optional .MultiEtaInfo.ResponseData data = 3;
inline bool Response::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void Response::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::MultiEtaInfo::ResponseData& Response::data() const {
  // @@protoc_insertion_point(field_get:MultiEtaInfo.Response.data)
  return data_ != NULL ? *data_
                         : *::MultiEtaInfo::ResponseData::internal_default_instance();
}
inline ::MultiEtaInfo::ResponseData* Response::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::MultiEtaInfo::ResponseData;
  }
  // @@protoc_insertion_point(field_mutable:MultiEtaInfo.Response.data)
  return data_;
}
inline ::MultiEtaInfo::ResponseData* Response::release_data() {
  // @@protoc_insertion_point(field_release:MultiEtaInfo.Response.data)
  
  ::MultiEtaInfo::ResponseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void Response::set_allocated_data(::MultiEtaInfo::ResponseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MultiEtaInfo.Response.data)
}

inline const Response* Response::internal_default_instance() {
  return &Response_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace MultiEtaInfo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_multi_5feta_5fstruct_2eproto__INCLUDED
